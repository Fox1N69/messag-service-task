version: '3.8'

services:
  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 8008
      POSTGRES_DB: messaggio
    ports:
      - "5433:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./config/postgresql.conf:/etc/postgresql/postgresql.conf
    command: ["postgres", "-c", "config_file=/etc/postgresql/postgresql.conf"] 

  migrate:
    image: migrate/migrate
    command: ["-path=/migrations", "-database=postgres://postgres:8008@postgres:5433/messaggio?sslmode=disable", "up"]
    volumes:
      - ./migrations:/migrations
    depends_on:
      - postgres 

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"

  kafka:
    depends_on:
      - zookeeper
    image: bitnami/kafka
    container_name: kafka
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    ports:
      - "9092:9092"

  zookeeper:
    image: arm64v8/zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"

  service:
    build:
      context: .
      dockerfile: cmd/message-service/Dockerfile
    container_name: service
    depends_on:
      - postgres
      - redis
      - kafka
      - zookeeper
    deploy:
      replicas: 3
    ports:
      - "4000:4000"

  client:
    build:
      context: .
      dockerfile: cmd/client/Dockerfile
    container_name: client
    depends_on:
      - service
    deploy:
      replicas: 3
    ports:
      - "4001:4001"

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - client
      - service

volumes:
  postgres-data:
